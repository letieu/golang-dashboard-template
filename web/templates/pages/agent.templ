package pages

import (
	"chatpilot/app/internal/app/db"
	"chatpilot/app/internal/app/middlewares"
	"chatpilot/app/web/templates/pages/part"
	"strconv"
)

templ AgentPage(selectedId int64, agents []db.Agent, currentUser middlewares.CurrentUser) {
	if len(agents) == 0 {
		return
	}
	<div class="min-h-screen">
		<div class="max-w-6xl mx-auto px-4 sm:px-6 py-6">
			<!-- Header Section -->
			<header class="mb-8">
				<div class="card-primary">
					<div class="flex items-center justify-between">
						@AgentInfo(agents, selectedId)
						<div class="hidden md:flex items-center gap-3">
							<div class="text-right">
								<div x-data="{ open: false }">
									<button @click="open = ! open" class="text-sm text-rose-pine-love cursor-pointer">{ currentUser.Username }</button>
									<ul x-show="open" @click.outside="open = false" class="mt-2">
										<li class="cursor-pointer"><a href="/logout">Logout</a></li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
			</header>
			<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
				<!-- Bot Overview Card -->
				@Card(1, "Overview") {
					@part.BotOverview()
					<button class="mt-6 w-full btn-primary">
						<i data-lucide="square-pen" class=""></i>
						Edit Details
					</button>
				}
				<!-- Train Bot Card -->
				<div class="group">
					<div class="card-primary">
						<div class="section-header">
							<div class="section-number section-number-2">2</div>
							<h3 class="section-title">Train Agent</h3>
						</div>
						@part.BotKnowledge()
						<button class="mt-6 w-full btn-secondary">
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
							</svg>
							Add New Source
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ AgentInfo(agents []db.Agent, selectedId int64) {
	<div class="flex items-center gap-4">
		<div class="w-12 h-12 bg-gradient-to-br from-rose-pine-rose to-rose-pine-love rounded-full flex items-center justify-center shadow-lg">
			<i data-lucide="bot-message-square" class="w-[32px] h-[32px] text-rose-pine-pine"></i>
		</div>
		<div>
			<div class="flex gap-4 items-center">
				<select name="agent" class="bg-rose-pine-base text-xl font-bold text-rose-pine-text cursor-pointer p-2 rounded-md">
					for _, agent := range agents {
						<option
							value={ agent.Id }
							selected={ agent.Id == selectedId }
							class="text-black dark:text-white bg-rose-pine-base"
							hx-get={ "/?agent=" + strconv.Itoa(int(agent.Id)) }
							hx-target="html"
							hx-swap="outerHTML"
							hx-push-url="true"
						>
							{ agent.Name }
						</option>
					}
				</select>
				<form action="/agent" method="POST">
					<button type="submit" class="cursor-pointer">
						<i data-lucide="plus"></i>
					</button>
				</form>
			</div>
			<div class="flex items-center gap-4 mt-2 text-sm text-rose-pine-subtle">
				<div class="flex items-center gap-2">
					<div class="w-2 h-2 bg-rose-pine-foam rounded-full animate-pulse"></div>
					<span class="text-rose-pine-foam font-medium">Active</span>
				</div>
				<div class="w-px h-4 bg-rose-pine-highlight-med/30"></div>
				<span>Platforms: Facebook, Instagram</span>
			</div>
		</div>
	</div>
}

templ Card(index uint, title string) {
	<div class="group">
		<div class="card-primary">
			<div class="section-header">
				<div class="section-number section-number-1">1</div>
				<h3 class="section-title">Agent Overview</h3>
			</div>
			{ children... }
		</div>
	</div>
}
